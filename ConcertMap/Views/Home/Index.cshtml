@model ConcertMap.Models.Events

@using ConcertMap.App_Code.Helper

@{
    ViewBag.Title = "ConcertMap";
}

@section Scripts {

    
    <script>
        $(function () {
            
            var markers = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(MapManager.GetMarkers(Model.events)))
            var concertData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(MapManager.CreateCountryData(Model.events)));

            var mapObj = new jvm.Map({

                container: $('#world-map'),
                map: 'world_mill',
                normalizeFunction: 'polynomial',
                markerStyle: {
                    initial: {
                        fill: '#B88A99',
                        stroke: '#805563',
                        r: 3
                    }
                },
                backgroundColor: '#A1ABB5',
                markers: markers,
                series: {
                    regions: [{
                        values: concertData,
                        scale: ['#33F259', '#176326'],
                        normalizeFunction: 'polynomial',
                        attribute: 'fill'
                    }]
                }
            });

        });


        function hide() {
            $("#show_button").show();
            //$("#search_panel").hide();
            $("#search_panel").hide("drop",{ direction: "left" }, "slow" );

        }


        function show() {
            //$("#search_panel").show();
            $("#search_panel").show("drop",{ direction: "left" }, "slow" );
            $("#show_button").hide();
        }

    </script>
}

<div id="world-map" style="height: 100%"></div>

<div id="search_panel">
    <div id="title">Search</div>
  
    <div id="search_form">
        @using (Html.BeginForm("Search", "Home", FormMethod.Get))
        {
            <p>
                Artist: @Html.TextBoxFor(model => model.ArtistName) <button class="button">+</button><br />
                From: @Html.EditorFor(model => model.fromDate, new { @type = "date" }) <br />
                To: @Html.EditorFor(model => model.toDate, new { @type = "date" }) <br />
                Upcoming: @Html.CheckBoxFor(model => model.isUpcoming, new { @checked = "checked" }) <br />
                Past: @Html.CheckBoxFor(model => model.isPast, new { @checked = "checked" }) <br />
                <input class="button" type="submit" value="Search" id="search_button"/>
            </p>
        } 
    </div>

    <button onclick="hide()" id="hide_button" class="button">Hide</button>
</div>
<button onclick="show()" id="show_button" class="button">Show</button>